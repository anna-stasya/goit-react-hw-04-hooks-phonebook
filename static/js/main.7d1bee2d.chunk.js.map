{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.jsx","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","map","id","name","number","item","tel","btnDel","onClick","Filter","value","onChange","filter","label","text","type","pattern","title","required","input","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","form","preventDefault","btnAdd","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","console","log","setItem","stringify","getFilterVisisbleContacts","normoliseFilter","toLowerCase","contact","includes","getVisisbleContacts","app","сontactsNew","shortid","generate","some","alert","prevState","titleContacts","contactsId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1bee2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3I6wV\",\"label\":\"ContactForm_label__beQo_\",\"input\":\"ContactForm_input__USnoi\",\"btnAdd\":\"ContactForm_btnAdd__3UHzY\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { useState } from 'react';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({onSubmit}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n   //ввод в интпут\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    \r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      \r\n      default: return;\r\n    }\r\n  };\r\n  \r\n  //-----------другой вариант записи------------\r\n  // const handleNameChange = event => {\r\n  //   setName(event.currentTarget.value);\r\n  // };\r\n  // const handleNumberChange = event => {\r\n  //   setNumber(event.currentTarget.value);\r\n  // };\r\n\r\n    //добавить контакт через кнопку\r\n  const handleSabmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit({name, number});\r\n    setName('');\r\n    setNumber('');\r\n\r\n    //this.resetInput();\r\n  };\r\n\r\n  //   //очистить поля ввода\r\n//   resetInput = () => {\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n\r\n  return (\r\n       <form className={s.form} onSubmit={handleSabmit}> \r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"sabmit\" className={s.btnAdd}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport { ContactForm };\r\n","//import React, { Component } from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\n//Components\r\nimport { ContactList } from './Components/ContactList/ContactList';\r\nimport { Filter } from './Components/Filter/Filter';\r\nimport { ContactForm } from './Components/ContactForm/ContactForm';\r\n//pnotify\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\r\n\r\nimport s from './App.module.css';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n\r\n  //-------------------запросы к удаленным ресурсам\r\n  useEffect(() => {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    console.log(parsedContacts);\r\n    if (parsedContacts) {\r\n      setContacts(parsedContacts);\r\n    }\r\n  }, []);\r\n  \r\n  //---------------------запись в localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts])\r\n\r\n\r\n  // ----------------------------добавить контакт\r\n  const forSubmitHandler = text => {\r\n    //генерация id\r\n    const сontactsNew = {\r\n      id: shortid.generate(),\r\n      ...text,\r\n    };\r\n    const someContact = contacts.some(\r\n      contact => contact.name.toLowerCase() === text.name.toLowerCase(),\r\n    );\r\n    if (someContact) {\r\n      alert(`${text.name} is already in contacts`);\r\n      return;\r\n    }\r\n    //------------------- добавляем новый контакт\r\n    setContacts(prevState => \r\n      [сontactsNew, ...prevState]\r\n    );\r\n  };\r\n\r\n  //-----------------------удалить контакт\r\n  const deleteContacts = contactsId => {\r\n    setContacts(contacts =>\r\n      contacts.filter(contact => contact.id !== contactsId),\r\n    );\r\n  };\r\n\r\n  //------------------------фильтр\r\n  const changeFilter = event => {\r\n    return setFilter(event.currentTarget.value);\r\n  };\r\n  \r\n  //-----------------поиск по фильтру\r\n  const getVisisbleContacts = () => {\r\n    const normoliseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normoliseFilter)\r\n    );\r\n  };\r\n\r\n  const getFilterVisisbleContacts = getVisisbleContacts();\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm onSubmit={forSubmitHandler} />\r\n\r\n      <h2 className={s.titleContacts}>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList\r\n        contacts={getFilterVisisbleContacts}\r\n        onDeleteContacts={deleteContacts}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__XZCSM\",\"item\":\"ContactList_item__3pDm1\",\"name\":\"ContactList_name__3ywAZ\",\"tel\":\"ContactList_tel__I92RI\",\"btnDel\":\"ContactList_btnDel__1NN6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1KM3M\",\"label\":\"Filter_label__3YTA2\",\"text\":\"Filter_text__2i3hl\",\"input\":\"Filter_input__3QwUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2r-_D\",\"title\":\"App_title__31t7S\",\"titleContacts\":\"App_titleContacts__3tN1H\"};"],"sourceRoot":""}